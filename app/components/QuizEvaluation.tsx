// Z√°kladn√≠ typy
export type SkinType = 'Such√°' | 'Sm√≠≈°en√°' | 'Mastn√°' | 'Citliv√°' | 'Norm√°ln√≠';
export type ProductSet = 
  | 'Such√° z√°klad' 
  | 'Such√° komplet'
  | 'Such√° a norm√°ln√≠ Anti-age'
  | 'Such√° z√°klad + Sem tam pup√≠nek'
  | 'M+SM z√°klad'
  | 'M+SM komplet'
  | 'M+SM komplet + Sem tam pup√≠nek'
  | 'M+SM Anti-age'
  | 'Norm√°ln√≠ komplet'
  | 'Norm√°ln√≠ z√°klad'
  | 'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek'
  | 'Citliv√°'
  | 'Citliv√° + Sem tam pup√≠nek'
  | 'Kuper√≥za'
  | 'Dermatitida'
  | 'Probl√©m: AKN√â';

// Rozhran√≠ pro odpovƒõdi z kv√≠zu
export interface QuizAnswers {
  'skin-description'?: string;
  'skin-nose'?: string;
  'skin-cheeks'?: string;
  'cosmetic-compatibility'?: string[];
  'skin'?: string[];
  'wish-fish'?: string;
  'budget-limit'?: string;
}

// Rozhran√≠ pro v√Ωsledek kv√≠zu
export interface QuizResult {
  skinType: SkinType;
  recommendedSet: ProductSet;
  problems: string[];
  specialRecommendations: {
    hasPigmentation: boolean;
    hasUndereyeCircles: boolean;
    antiAgeSuggested: boolean;
  };
}
// Konstanty pro typy pleti
export const SKIN_TYPES: Record<string, SkinType> = {
  DRY: 'Such√°',
  MIXED: 'Sm√≠≈°en√°',
  OILY: 'Mastn√°',
  SENSITIVE: 'Citliv√°',
  NORMAL: 'Norm√°ln√≠'
} as const;

// Konstanty pro produktov√© sady
export const PRODUCT_SETS: Record<string, ProductSet> = {
  SUCHA_ZAKLAD: 'Such√° z√°klad',
  SUCHA_KOMPLET: 'Such√° komplet',
  SUCHA_ANTIAGE: 'Such√° a norm√°ln√≠ Anti-age',
  SUCHA_PUPINEK: 'Such√° z√°klad + Sem tam pup√≠nek',
  MSM_ZAKLAD: 'M+SM z√°klad',
  MSM_KOMPLET: 'M+SM komplet',
  MSM_KOMPLET_PUPINEK: 'M+SM komplet + Sem tam pup√≠nek',
  MSM_ANTIAGE: 'M+SM Anti-age',
  NORMALNI_KOMPLET: 'Norm√°ln√≠ komplet',
  NORMALNI_ZAKLAD: 'Norm√°ln√≠ z√°klad',
  NORMALNI_PUPINEK: 'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek',
  CITLIVA: 'Citliv√°',
  CITLIVA_PUPINEK: 'Citliv√° + Sem tam pup√≠nek',
  KUPEROZA: 'Kuper√≥za',
  DERMATITIDA: 'Dermatitida',
  PROBLEM_AKNE: 'Probl√©m: AKN√â'
} as const;

// URL konstanty a limity
export const SHOP_BASE_URL = 'https://www.kailushop.cz/';

// Sady podle typu pleti s prioritami
export const SADY_DLE_TYPU: Record<SkinType, ProductSet[]> = {
  'Such√°': [
    'Such√° a norm√°ln√≠ Anti-age',
    'Such√° komplet',
    'Such√° z√°klad + Sem tam pup√≠nek',
    'Such√° z√°klad'
  ],
  'Sm√≠≈°en√°': [
    'Probl√©m: AKN√â',
    'M+SM komplet + Sem tam pup√≠nek',
    'M+SM Anti-age',
    'M+SM komplet',
    'M+SM z√°klad'
  ],
  'Mastn√°': [
    'Probl√©m: AKN√â',
    'M+SM komplet + Sem tam pup√≠nek',
    'M+SM Anti-age',
    'M+SM komplet',
    'M+SM z√°klad'
  ],
  'Norm√°ln√≠': [
    'Such√° a norm√°ln√≠ Anti-age',
    'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek',
    'Norm√°ln√≠ komplet',
    'Norm√°ln√≠ z√°klad'
  ],
  'Citliv√°': [
    'Citliv√° + Sem tam pup√≠nek',
    'Citliv√°'
  ]
};

// Cenov√© limity pro sady
export const PRICE_LIMITS: Record<ProductSet, number | null> = {
  'Such√° z√°klad': 1500,
  'M+SM z√°klad': 1500,
  'Norm√°ln√≠ z√°klad': 1500,
  'Dermatitida': 1500,
  'Such√° komplet': 2500,
  'M+SM komplet': 2500,
  'Norm√°ln√≠ komplet': 2500,
  'Citliv√°': 2500,
  'Kuper√≥za': 2500,
  'Probl√©m: AKN√â': 2500,
  'Such√° a norm√°ln√≠ Anti-age': null,
  'M+SM Anti-age': null,
  'Such√° z√°klad + Sem tam pup√≠nek': null,
  'M+SM komplet + Sem tam pup√≠nek': null,
  'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek': null,
  'Citliv√° + Sem tam pup√≠nek': null
};
// Speci√°ln√≠ doporuƒçen√≠
export const SPECIAL_RECOMMENDATIONS = {
  PIGMENTATION: {
    text: 'Pro pigmentov√© skvrny doporuƒçujeme chemick√Ω peeling. V√≠ce informac√≠ najdete na na≈°em webu.',
    url: 'www.kailu.cz'
  },
  UNDEREYE_CIRCLES: {
    getText: (isAntiAge: boolean) => isAntiAge 
      ? 'Kr√©m na kruhy pod oƒçima je ji≈æ souƒç√°st√≠ va≈°√≠ anti-age sady.'
      : 'Pro zm√≠rnƒõn√≠ kruh≈Ø pod oƒçima v√°m doporuƒçuji p≈ôihodit do ko≈°√≠ku skvƒõl√Ω oƒçn√≠ kr√©m od korejsk√© znaƒçky Skin1004.'
  }
};

// V√Ωsledn√© texty pro jednotliv√© sady
export const RESULT_TEXTS: Record<ProductSet, string> = {
  'Such√° z√°klad': 'Va≈°e such√° ple≈• vol√° po pravideln√© hydrataci a v√Ω≈æivƒõ. P≈ôipravila jsem pro v√°s z√°kladn√≠ sadu 4 produkt≈Ø, kter√° je perfektn√≠ pro zaƒç√°tek nebo pokud hled√°te cenovƒõ dostupnƒõj≈°√≠ variantu. P≈ôesto≈æe jde o z√°kladn√≠ p√©ƒçi, jej√≠ √∫ƒçinnost v√°s p≈ô√≠jemnƒõ p≈ôekvap√≠! Ple≈• bude hydratovan√°, vy≈æiven√° a p≈ô√≠jemn√° na dotek. Dop≈ôejte sv√© pleti p√©ƒçi, kterou pot≈ôebuje!',
  
  'Such√° komplet': 'Va≈°e such√° ple≈• pot≈ôebuje komplexn√≠ p√©ƒçi pro obnovu komfortu a vitality. P≈ôipravila jsem pro v√°s sadu 5 produkt≈Ø s hydrataƒçn√≠mi a vy≈æivuj√≠c√≠mi slo≈ækami. P≈ôesto≈æe jsou produkty silnƒõ hydrataƒçn√≠ a vy≈æivuj√≠c√≠, jejich textura je p≈ô√≠jemn√° a dob≈ôe se vst≈ôeb√°v√°. Vr√°t√≠ va≈°√≠ pleti pru≈ænost, hebkost a zdrav√Ω vzhled. Dop≈ôejte sv√© pleti p√©ƒçi, po kter√© ji≈æ dlouho vol√°!',
  
  'Such√° a norm√°ln√≠ Anti-age': 'Na sc√©nu p≈ôich√°z√≠ extra nadupan√° vr√°skov√° prevence! Na z√°kladƒõ Va≈°ich odpovƒõd√≠ jsem zjistila, ≈æe m√°te suchou ple≈• a pojmy jako st√°rnut√≠ a vr√°sky u≈æ jsou v√°m trochu povƒõdom√©. A pr√°vƒõ tento typ pleti pot≈ôebuje proti vr√°sk√°m a ztr√°tƒõ elasticity extra p√©ƒçi! P≈ôipravila jsem pro V√°s exkluzivn√≠ sadu 7 pr√©miov√Ωch produkt≈Ø, kter√° kombinuje intenzivn√≠ hydrataci s √∫ƒçinn√Ωmi anti-age slo≈ækami.',
  
  'Such√° z√°klad + Sem tam pup√≠nek': 'Va≈°e such√° ple≈• pot≈ôebuje p≈ôedev≈°√≠m hydrataci, ale obƒças se na n√≠ p≈ôesto vyklube nƒõjak√Ω ten pup√≠nek. Proto jsem pro v√°s p≈ôipravila z√°kladn√≠ sadu 3 produkt≈Ø doplnƒõnou o mini sadu "Sem tam pup√≠nek". Zat√≠mco z√°kladn√≠ sada zajist√≠ pleti pot≈ôebnou hydrataci a v√Ω≈æivu, mini sada bude va≈°√≠m pomocn√≠kem v p≈ô√≠padƒõ n√°hl√Ωch nedokonalost√≠.',
  
  'M+SM z√°klad': 'Va≈°e ple≈• si zaslou≈æ√≠ profesion√°ln√≠ p√©ƒçi, kter√° ji udr≈æ√≠ v rovnov√°ze. Proto jsem pro v√°s p≈ôipravila z√°kladn√≠ sadu 4 produkt≈Ø, kter√° je perfektn√≠, pokud s p√©ƒç√≠ o ple≈• teprve zaƒç√≠n√°te nebo hled√°te cenovƒõ dostupnƒõj≈°√≠ variantu. Produkty jsou lehk√©, nezatƒõ≈æuj√≠ ple≈•, reguluj√≠ maz, ale nevysu≈°uj√≠.',
  
  'M+SM komplet': 'Va≈°e ple≈• si zaslou≈æ√≠ p√©ƒçi, kter√° efektivnƒõ reguluje tvorbu ko≈æn√≠ho mazu a z√°rove≈à nevysu≈°uje. P≈ôipravila jsem pro v√°s komplexn√≠ sadu ≈°esti produkt≈Ø, kter√© ≈°etrnƒõ ƒçist√≠, hydratuj√≠ a harmonizuj√≠ ple≈•. Souƒç√°st√≠ je i n√°≈° bestseller ‚Äì enzymatick√Ω peeling, expert na odstranƒõn√≠ ƒçern√Ωch teƒçek.',
  
  'M+SM komplet + Sem tam pup√≠nek': 'Va≈°e ple≈• v√°s um√≠ obƒças trochu pozlobit. ƒåasto se leskne a sem tam se v√°m vyklube nev√≠tan√Ω pup√≠nek. P≈ôesnƒõ pro v√°s jsem p≈ôipravila sadu pro ka≈ædodenn√≠ p√©ƒçi a tak√© dopl≈àkovou sadu "Sem tam pup√≠nek". Zat√≠mco hlavn√≠ sada se postar√° o ka≈ædodenn√≠ pot≈ôeby va≈°√≠ pleti, mini sada bude va≈°√≠m rychl√Ωm pomocn√≠kem.',
  
  'M+SM Anti-age': 'Va≈°e ple≈• st√°rne pomaleji, ale vr√°sky se j√≠ nakonec tak√© nevyhnou. P≈ôipravila jsem pro v√°s sadu 5 produkt≈Ø, kter√© respektuj√≠ specifick√© pot≈ôeby va≈°√≠ pleti a z√°rove≈à √∫ƒçinnƒõ bojuj√≠ proti zn√°mk√°m st√°rnut√≠. Redukuj√≠ nadmƒõrnou mastnotu, oddaluj√≠ tvorbu vr√°sek, zpev≈àuj√≠ ple≈• a hydratuj√≠ ji.',
  
  'Norm√°ln√≠ komplet': 'Va≈°e ple≈• je ve skvƒõl√© kondici! P≈ôesto≈æe se ≈ôad√≠ mezi "norm√°ln√≠" typ pleti, o kter√©m vƒõt≈°ina lid√≠ jen sn√≠, je d≈Øle≈æit√© neusnout na vav≈ô√≠nech. P≈ôipravila jsem pro v√°s kompletn√≠ sadu 6 produkt≈Ø, kter√° kromƒõ ka≈ædodenn√≠ p√©ƒçe obsahuje i produkty pro intenzivnƒõj≈°√≠ o≈°et≈ôen√≠.',
  
  'Norm√°ln√≠ z√°klad': 'Va≈°e ple≈• je norm√°ln√≠! Gratuluji - a ti≈°e v√°m z√°vid√≠m. üêÄ M√°te pomƒõrnƒõ vz√°cn√Ω typ pleti, o kter√©m vƒõt≈°ina z n√°s m≈Ø≈æe jen sn√≠t. Aby si va≈°e ple≈• zachovala svou p≈ôirozenou rovnov√°hu a vitalitu, p≈ôipravila jsem pro v√°s z√°kladn√≠ sadu 4 produkt≈Ø.',
  
  'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek': 'M√°te vz√°cn√Ω typ pleti, o kter√©m mnoz√≠ mohou jen sn√≠t ‚Äì va≈°i ple≈• oznaƒçujeme jako ‚Äûnorm√°ln√≠." Z va≈°ich odpovƒõd√≠ v≈°ak vypl√Ωv√°, ≈æe se obƒças objev√≠ nƒõjak√Ω ten pup√≠nek. Proto bych v√°m doporuƒçila kombinaci dvou sad.',
  
  'Citliv√°': 'Va≈°e citliv√° ple≈• si zaslou≈æ√≠ tu nejjemnƒõj≈°√≠ p√©ƒçi. P≈ôipravila jsem pro v√°s sadu 5 produkt≈Ø se zklid≈àuj√≠c√≠mi a regeneraƒçn√≠mi slo≈ækami. P≈ôesto≈æe jsou produkty velmi jemn√©, jejich √∫ƒçinnost je neskuteƒçn√°!',
  
  'Citliv√° + Sem tam pup√≠nek': 'Va≈°e citliv√° ple≈• pot≈ôebuje nejen zklidnit, ale obƒças i pomoct s pup√≠nky. P≈ôipravila jsem pro v√°s kombinaci dvou sad - hlavn√≠ sadu pro citlivou ple≈• a mini sadu "Sem tam pup√≠nek".',
  
  'Kuper√≥za': 'Vypad√° to, ≈æe v√°s tr√°p√≠ kuper√≥za! Pokud jste se p≈ôeklikl/a, m≈Ø≈æete se vr√°tit a vyplnit dotazn√≠k znovu. Pokud na va≈°√≠ tv√°≈ôi doopravdy vid√≠te viditeln√©, zarudnut√© ≈æilky, bude pro v√°s skvƒõl√° sada speci√°lnƒõ sestaven√° pro ple≈• s kuper√≥zou.',
  
  'Dermatitida': 'Vybrala jste mo≈ænost, ≈æe m√°te dermatitidu. Nen√≠ to s n√≠ √∫plnƒõ jednoduch√©, m≈Ø≈æe b√Ωt perior√°ln√≠ nebo seboroick√°. Nejlep≈°√≠ bude, kdy≈æ se objedn√°te na o≈°et≈ôen√≠ a probereme to na≈æivo u mƒõ v salonu.',
  
  'Probl√©m: AKN√â': 'Akn√© m≈Ø≈æe b√Ωt opravdu n√°roƒçn√Ωm spoleƒçn√≠kem, ale vƒõ≈ôte, ≈æe v√Ωsledky na sebe nenechaj√≠ dlouho ƒçekat! P≈ôipravila jsme pro v√°s speci√°ln√≠ sadu, kter√° pom≈Ø≈æe va≈°√≠ pleti naj√≠t rovnov√°hu.'
};
// Funkce pro vyhodnocen√≠ typu pleti
export function evaluateSkinType(answers: QuizAnswers): SkinType {
  const points: Record<SkinType, number> = {
    [SKIN_TYPES.DRY]: 0,
    [SKIN_TYPES.MIXED]: 0,
    [SKIN_TYPES.OILY]: 0,
    [SKIN_TYPES.SENSITIVE]: 0,
    [SKIN_TYPES.NORMAL]: 0
  };
  console.log('=== VYHODNOCEN√ç TYPU PLETI ===');
  console.log('Poƒç√°teƒçn√≠ stav bod≈Ø:', {
    Such√°: points[SKIN_TYPES.DRY],
    Sm√≠≈°en√°: points[SKIN_TYPES.MIXED],
    Mastn√°: points[SKIN_TYPES.OILY],
    Citliv√°: points[SKIN_TYPES.SENSITIVE],
    Norm√°ln√≠: points[SKIN_TYPES.NORMAL]
  });

  // Vyhodnocen√≠ prvn√≠ ot√°zky
  const skinDescription = answers['skin-description'];
if (skinDescription) {
  console.log('\nVyhodnocuji ot√°zku o typu pleti:', skinDescription);
  if (skinDescription.includes('Je v pohodƒõ')) {
    points[SKIN_TYPES.NORMAL]++;
    points[SKIN_TYPES.MIXED]++;
    console.log('P≈ôid√°n 1 bod pro Norm√°ln√≠ a 1 bod pro Sm√≠≈°enou');
  } else if (skinDescription.includes('Je such√°')) {
    points[SKIN_TYPES.DRY]++;
    console.log('P≈ôid√°n 1 bod pro Suchou');
  } else if (skinDescription.includes('Dost se mast√≠')) {
    points[SKIN_TYPES.MIXED]++;
    console.log('P≈ôid√°n 1 bod pro Sm√≠≈°enou');
  } else if (skinDescription.includes('Mast√≠ se hodnƒõ')) {
    points[SKIN_TYPES.OILY]++;
    console.log('P≈ôid√°n 1 bod pro Mastnou');
  } else if (skinDescription.includes('Je citliv√°')) {
    points[SKIN_TYPES.SENSITIVE]++;
    points[SKIN_TYPES.DRY]++;
    console.log('P≈ôid√°n 1 bod pro Citlivou a 1 bod pro Suchou');
  }
  console.log('Body po prvn√≠ ot√°zce:', {
    Such√°: points[SKIN_TYPES.DRY],
    Sm√≠≈°en√°: points[SKIN_TYPES.MIXED],
    Mastn√°: points[SKIN_TYPES.OILY],
    Citliv√°: points[SKIN_TYPES.SENSITIVE],
    Norm√°ln√≠: points[SKIN_TYPES.NORMAL]
  });
}

// Ot√°zka o nose
const noseAnswer = answers['skin-nose'];
if (noseAnswer) {
  console.log('\nVyhodnocuji ot√°zku o nose:', noseAnswer);
  if (noseAnswer.includes('Va≈°e p√≥ry si na schov√°vanou nehraj√≠')) {
    points[SKIN_TYPES.OILY]++;
    points[SKIN_TYPES.MIXED]++;
    console.log('P≈ôid√°n 1 bod pro Mastnou a 1 bod pro Sm√≠≈°enou');
  } else if (noseAnswer.includes('P√≥ry jsou viditeln√© jen p≈ôi bli≈æ≈°√≠m pohledu')) {
    points[SKIN_TYPES.NORMAL]++;
    console.log('P≈ôid√°n 1 bod pro Norm√°ln√≠');
  } else if (noseAnswer.includes('Jak√© p√≥ry')) {
    points[SKIN_TYPES.DRY]++;
    console.log('P≈ôid√°n 1 bod pro Suchou');
  }
  console.log('Body po ot√°zce o nose:', {
    Such√°: points[SKIN_TYPES.DRY],
    Sm√≠≈°en√°: points[SKIN_TYPES.MIXED],
    Mastn√°: points[SKIN_TYPES.OILY],
    Citliv√°: points[SKIN_TYPES.SENSITIVE],
    Norm√°ln√≠: points[SKIN_TYPES.NORMAL]
  });
}

  // Ot√°zka o tv√°≈ô√≠ch
  const cheeksAnswer = answers['skin-cheeks'];
  if (cheeksAnswer) {
    console.log('\nVyhodnocuji ot√°zku o tv√°≈ô√≠ch:', cheeksAnswer);
    if (cheeksAnswer.includes('Ano, jsou v≈°ude')) {
      points[SKIN_TYPES.OILY]++;
      console.log('P≈ôid√°n bod pro Mastnou');
    } else if (cheeksAnswer.includes('Vid√≠m je hlavnƒõ v oblasti vedle nosu')) {
      points[SKIN_TYPES.MIXED]++;
      console.log('P≈ôid√°n bod pro Sm√≠≈°enou');
    } else if (cheeksAnswer.includes('Sem tam mo≈æn√° nƒõjak√Ω je')) {
      points[SKIN_TYPES.NORMAL]++;
      points[SKIN_TYPES.DRY]++;
      console.log('P≈ôid√°n bod pro Norm√°ln√≠ a Suchou');
    } else if (cheeksAnswer.includes('ƒåert vem p√≥ry')) {
      points[SKIN_TYPES.SENSITIVE]++;
      points[SKIN_TYPES.DRY]++;
      console.log('P≈ôid√°n bod pro Citlivou a Suchou');
 
  }
  console.log('Body po ot√°zce o tv√°≈ô√≠ch:', {
    Such√°: points[SKIN_TYPES.DRY],
    Sm√≠≈°en√°: points[SKIN_TYPES.MIXED],
    Mastn√°: points[SKIN_TYPES.OILY],
    Citliv√°: points[SKIN_TYPES.SENSITIVE],
    Norm√°ln√≠: points[SKIN_TYPES.NORMAL]
  });
}
  // Ot√°zka o kosmetice
  const cosmeticAnswers = answers['cosmetic-compatibility'] || [];
  if (cosmeticAnswers.length > 0) {
    console.log('\nVyhodnocuji ot√°zky o kosmetice:', cosmeticAnswers);
    cosmeticAnswers.forEach(answer => {
      if (answer.includes('Obƒças m√°m pocit, ≈æe mi ple≈• sp√≠≈°e vysu≈°√≠')) {
        points[SKIN_TYPES.DRY]++;
        points[SKIN_TYPES.SENSITIVE]++;
        console.log('P≈ôid√°n bod pro Suchou a Citlivou (vysu≈°en√≠)');
      }
      if (answer.includes('S kosmetikou mus√≠m opatrnƒõ')) {
        points[SKIN_TYPES.SENSITIVE]++;
        console.log('P≈ôid√°n bod pro Citlivou (opatrnost)');
      }
      if (answer.includes('Vƒõt≈°ina kosmetick√Ωch p≈ô√≠pravk≈Ø mi sedne')) {
        points[SKIN_TYPES.NORMAL]++;
        console.log('P≈ôid√°n bod pro Norm√°ln√≠');
      }
      if (answer.includes('Nƒõkter√© produkty mi √∫plnƒõ ucpou ple≈•')) {
        points[SKIN_TYPES.OILY]++;
        points[SKIN_TYPES.MIXED]++;
        console.log('P≈ôid√°n bod pro Mastnou a Sm√≠≈°enou');
      }
      if (answer.includes('Moje ple≈• miluje po≈ô√°dnƒõ hutn√© kr√©my')) {
        points[SKIN_TYPES.DRY]++;
        console.log('P≈ôid√°n bod pro Suchou');
      }
    });
    console.log('Body po ot√°zce o kosmetice:', {
      Such√°: points[SKIN_TYPES.DRY],
      Sm√≠≈°en√°: points[SKIN_TYPES.MIXED],
      Mastn√°: points[SKIN_TYPES.OILY],
      Citliv√°: points[SKIN_TYPES.SENSITIVE],
      Norm√°ln√≠: points[SKIN_TYPES.NORMAL]
    });
  }

  // Urƒçen√≠ v√Ωsledn√©ho typu
  const sortedTypes = Object.entries(points)
    .sort(([,a], [,b]) => b - a) as [SkinType, number][];
  
  console.log('\n=== V√ùSLEDEK ===');
  console.log('Se≈ôazen√© typy podle bod≈Ø:', 
    sortedTypes.map(([type, score]) => `${type}: ${score}`).join(', ')
  );
  console.log('Vybran√Ω typ pleti:', sortedTypes[0][0]);

  return sortedTypes[0][0];
}

// Hlavn√≠ vyhodnocovac√≠ funkce
export function evaluateQuiz(answers: QuizAnswers): QuizResult {
  const skinType = evaluateSkinType(answers);
  const problems = answers['skin'] || [];
  const budgetAnswer = answers['budget-limit'] || '';
  const budget = budgetAnswer.includes('1500') ? 1500 : 
                budgetAnswer.includes('2500') ? 2500 : null;
  
  const recommendedSet = selectProductSet(skinType, problems, budget, answers);
  
  return {
    skinType,
    recommendedSet,
    problems,
    specialRecommendations: {
      hasPigmentation: problems.includes('Pigmentov√© skvrny nebo jizvy po akn√©'),
      hasUndereyeCircles: problems.includes('Kruhy pod oƒçima'),
      antiAgeSuggested: recommendedSet.includes('Anti-age')
    }
  };
}

// Funkce pro v√Ωbƒõr produktov√© sady
export function selectProductSet(
  skinType: SkinType, 
  problems: string[], 
  budget: number | null,
  answers: QuizAnswers
): ProductSet {
  console.log('\n=== V√ùBƒöR PRODUKTOV√â SADY ===');
  console.log('Vstupn√≠ parametry:');
  console.log('- Typ pleti:', skinType);
  console.log('- Probl√©my:', problems);
  console.log('- Rozpoƒçet:', budget);
  console.log('- P≈ô√°n√≠:', answers['wish-fish'] || '≈æ√°dn√©');

  // Kontrola speci√°ln√≠ch p≈ô√≠pad≈Ø
  if (problems.includes('Dermatitida')) {
    console.log('Nalezena dermatitida - vrac√≠m speci√°ln√≠ sadu');
    return PRODUCT_SETS.DERMATITIDA;
  }
  if (problems.includes('Kuper√≥za ("popraskan√© ≈æilky")')) {
    console.log('Nalezena kuper√≥za - vrac√≠m speci√°ln√≠ sadu');
    return PRODUCT_SETS.KUPEROZA;
  }

  // Z√≠sk√°n√≠ dostupn√Ωch sad pro typ pleti
  const availableSets = SADY_DLE_TYPU[skinType];
  console.log('\nDostupn√© sady pro typ pleti:', availableSets);

  // Filtrov√°n√≠ podle cenov√©ho limitu
  let affordableSets = availableSets.filter(set => {
    const setPrice = PRICE_LIMITS[set];
    if (setPrice === null) {
      return budget === null;
    }
    return budget === null || setPrice <= budget;
  });
  console.log('Sady v cenov√©m limitu:', affordableSets);

  // V√Ωbƒõr sady podle probl√©m≈Ø
  if (problems.includes('Akn√© (v√≠ce ne≈æ 5 pup√≠nk≈Ø)')) {
    console.log('Nalezeno akn√© - vrac√≠m speci√°ln√≠ sadu pro akn√©');
    return PRODUCT_SETS.PROBLEM_AKNE;
  }

  if (problems.includes('Sem tam pup√≠nek')) {
    const pupinekSet = `${skinType} z√°klad + Sem tam pup√≠nek` as ProductSet;
    if (affordableSets.includes(pupinekSet)) {
      console.log('Nalezen obƒçasn√Ω pup√≠nek - vyb√≠r√°m pup√≠nkovou sadu:', pupinekSet);
      return pupinekSet;
    }
    console.log('Pup√≠nkov√° sada nen√≠ v dostupn√Ωch sad√°ch, pokraƒçuji dal≈°√≠m v√Ωbƒõrem');
  }

  // Pokud m√° b√Ωt anti-age, vybereme anti-age sadu
  if (problems.includes('Vr√°sky')) {
    const antiAgeSet = affordableSets.find(set => set.includes('Anti-age'));
    if (antiAgeSet) {
      console.log('Nalezeny vr√°sky - vyb√≠r√°m anti-age sadu:', antiAgeSet);
      return antiAgeSet;
    }
    console.log('Anti-age sada nen√≠ v dostupn√Ωch sad√°ch, pokraƒçuji dal≈°√≠m v√Ωbƒõrem');
  }
  const wishAnswer = answers['wish-fish'];
  if (wishAnswer) {
    console.log('\nVyhodnocuji p≈ô√°n√≠:', wishAnswer);
    
    // P≈ô√°n√≠ ohlednƒõ st√°rnut√≠ a vr√°sek
    if (wishAnswer.includes('zpomalit st√°rnut√≠') || wishAnswer.includes('Zbav mƒõ vr√°sek')) {
      if (skinType === SKIN_TYPES.DRY || skinType === SKIN_TYPES.NORMAL) {
        console.log('P≈ô√°n√≠ ohlednƒõ st√°rnut√≠ - vyb√≠r√°m anti-age sadu pro suchou/norm√°ln√≠ ple≈•');
        const antiAgeSada = affordableSets.find(set => set.includes('Anti-age'));
        if (antiAgeSada) return antiAgeSada;
      } else if (skinType === SKIN_TYPES.MIXED || skinType === SKIN_TYPES.OILY) {
        console.log('P≈ô√°n√≠ ohlednƒõ st√°rnut√≠ - vyb√≠r√°m anti-age sadu pro mastnou/sm√≠≈°enou ple≈•');
        const antiAgeSada = affordableSets.find(set => set.includes('Anti-age'));
        if (antiAgeSada) return antiAgeSada;
      }
    }
  
    // P≈ô√°n√≠ ohlednƒõ mastnoty a lesku
    if (wishAnswer.includes('p≈ôestane lesknout') || wishAnswer.includes('ƒçern√© teƒçky')) {
      if ([SKIN_TYPES.MIXED, SKIN_TYPES.OILY].includes(skinType)) {
        console.log('P≈ô√°n√≠ ohlednƒõ mastnoty/ƒçern√Ωch teƒçek - vyb√≠r√°m kompletn√≠ sadu pro mastnou/sm√≠≈°enou ple≈•');
        const kompletSada = affordableSets.find(set => set.includes('komplet'));
        if (kompletSada) return kompletSada;
      }
    }
  
    // P≈ô√°n√≠ ohlednƒõ citliv√© pleti
    if (wishAnswer.includes('nechci m√≠t citlivou ple≈•')) {
      console.log('P≈ô√°n√≠ ohlednƒõ citliv√© pleti - vyb√≠r√°m speci√°ln√≠ sadu pro citlivou ple≈•');
      const citlivaSada = affordableSets.find(set => set.includes('Citliv√°'));
      if (citlivaSada) return citlivaSada;
    }
  
    // P≈ô√°n√≠ ohlednƒõ pup√≠nk≈Ø
    if (wishAnswer.includes('zmiz√≠ pup√≠nky')) {
      console.log('P≈ô√°n√≠ ohlednƒõ pup√≠nk≈Ø - kontroluji dostupnost pup√≠nkov√© sady');
      const pupinekSet = `${skinType} z√°klad + Sem tam pup√≠nek` as ProductSet;
      if (affordableSets.includes(pupinekSet)) return pupinekSet;
    }
  
    // P≈ô√°n√≠ ohlednƒõ hydratace a z√°≈ôivosti
    if (wishAnswer.includes('vysu≈°en√°') || wishAnswer.includes('z√°≈ôivƒõj≈°√≠ a vypnujƒõj≈°√≠')) {
      console.log('P≈ô√°n√≠ ohlednƒõ hydratace/z√°≈ôivosti - vyb√≠r√°m kompletn√≠ sadu');
      const kompletSada = affordableSets.find(set => set.includes('komplet'));
      if (kompletSada) return kompletSada;
    }
  }
  // Jinak vrac√≠me prvn√≠ dostupnou sadu podle priority
  console.log('\n≈Ω√°dn√© speci√°ln√≠ podm√≠nky, vrac√≠m prvn√≠ dostupnou sadu:', affordableSets[0]);
  return affordableSets[0];
}