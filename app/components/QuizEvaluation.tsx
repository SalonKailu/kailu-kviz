// Z√°kladn√≠ typy
export type SkinType = 'Such√°' | 'Sm√≠≈°en√°' | 'Mastn√°' | 'Citliv√°' | 'Norm√°ln√≠';
export type ProductSet = 
  | 'Such√° z√°klad' 
  | 'Such√° komplet'
  | 'Such√° a norm√°ln√≠ Anti-age'
  | 'Such√° z√°klad + Sem tam pup√≠nek'
  | 'M+SM z√°klad'
  | 'M+SM komplet'
  | 'M+SM komplet + Sem tam pup√≠nek'
  | 'M+SM Anti-age'
  | 'Norm√°ln√≠ komplet'
  | 'Norm√°ln√≠ z√°klad'
  | 'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek'
  | 'Citliv√°'
  | 'Citliv√° + Sem tam pup√≠nek'
  | 'Kuper√≥za'
  | 'Dermatitida'
  | 'Probl√©m: AKN√â';

// Rozhran√≠ pro odpovƒõdi z kv√≠zu
export interface QuizAnswers {
  'skin-description'?: string;
  'skin-nose'?: string;
  'skin-cheeks'?: string;
  'cosmetic-compatibility'?: string[];
  'skin'?: string[];
  'wish-fish'?: string;
  'budget-limit'?: string;
}

// Rozhran√≠ pro v√Ωsledek kv√≠zu
export interface QuizResult {
  skinType: SkinType;
  recommendedSet: ProductSet;
  problems: string[];
  specialRecommendations: {
    hasPigmentation: boolean;
    hasUndereyeCircles: boolean;
    antiAgeSuggested: boolean;
    hasBlackheads?: boolean;
    isPregnant?: boolean;
  };
}
// Konstanty pro typy pleti
export const SKIN_TYPES: Record<string, SkinType> = {
  DRY: 'Such√°',
  MIXED: 'Sm√≠≈°en√°',
  OILY: 'Mastn√°',
  SENSITIVE: 'Citliv√°',
  NORMAL: 'Norm√°ln√≠'
} as const;

// Konstanty pro produktov√© sady
export const PRODUCT_SETS: Record<string, ProductSet> = {
  SUCHA_ZAKLAD: 'Such√° z√°klad',
  SUCHA_KOMPLET: 'Such√° komplet',
  SUCHA_ANTIAGE: 'Such√° a norm√°ln√≠ Anti-age',
  SUCHA_PUPINEK: 'Such√° z√°klad + Sem tam pup√≠nek',
  MSM_ZAKLAD: 'M+SM z√°klad',
  MSM_KOMPLET: 'M+SM komplet',
  MSM_KOMPLET_PUPINEK: 'M+SM komplet + Sem tam pup√≠nek',
  MSM_ANTIAGE: 'M+SM Anti-age',
  NORMALNI_KOMPLET: 'Norm√°ln√≠ komplet',
  NORMALNI_ZAKLAD: 'Norm√°ln√≠ z√°klad',
  NORMALNI_PUPINEK: 'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek',
  CITLIVA: 'Citliv√°',
  CITLIVA_PUPINEK: 'Citliv√° + Sem tam pup√≠nek',
  KUPEROZA: 'Kuper√≥za',
  DERMATITIDA: 'Dermatitida',
  PROBLEM_AKNE: 'Probl√©m: AKN√â'
} as const;


// URL konstanty a limity
export const DISPLAY_NAMES = {
  'Norm√°ln√≠ z√°klad': 'Z√°kladn√≠ sada pro norm√°ln√≠ ple≈•',
  'Norm√°ln√≠ komplet': 'Kompletn√≠ sada pro norm√°ln√≠ ple≈•',
  'Such√° z√°klad': 'Z√°kladn√≠ sada pro suchou ple≈•',
  'Such√° komplet': 'Kompletn√≠ sada pro suchou ple≈•',
  'M+SM z√°klad': 'Z√°kladn√≠ sada pro mastnou a sm√≠≈°enou ple≈•',
  'M+SM komplet': 'Kompletn√≠ sada pro mastnou a sm√≠≈°enou ple≈•',
  'Such√° a norm√°ln√≠ Anti-age': 'Anti-age sada pro norm√°ln√≠ a suchou ple≈•',
  'M+SM Anti-age': 'Anti-age sada pro mastnou a sm√≠≈°enou ple≈•',
  'Citliv√°': 'Sada pro citlivou ple≈•',
  'Citliv√° + Sem tam pup√≠nek': 'Sada pro citlivou ple≈• s pup√≠nky',
  'Kuper√≥za': 'Sada pro ple≈• s kuper√≥zou',
  'Dermatitida': 'Sada pro dermatitidu',
  'Probl√©m: AKN√â': 'Sada pro problematickou ple≈•'
};

export const SHOP_BASE_URL = 'https://www.kailushop.cz/';
export const PRODUCT_URLS = {
'Such√° z√°klad': 'zakladni-sada-pro-suchou-plet',
'Such√° komplet': 'kompletni-sada-pro-suchou-plet',
'Such√° a norm√°ln√≠ Anti-age': 'anti-age-sada-pro-normalni-a-suchou-plet',
'Such√° z√°klad + Sem tam pup√≠nek': 'zakladni-sada-pro-suchou-plet',
'M+SM z√°klad': 'zakladni-sada-pro-mastnou-a-smisenou-plet',
'M+SM komplet': 'kompletni-sada-pro-mastnou-a-smisenou-plet',
'M+SM komplet + Sem tam pup√≠nek': 'kompletni-sada-pro-mastnou-a-smisenou-plet',
'M+SM Anti-age': 'anti-age-sada-pro-mastnou-a-smisenou-plet',
'Norm√°ln√≠ komplet': 'kompletni-sada-pro-normalni-plet',
'Norm√°ln√≠ z√°klad': 'zakladni-sada-pro-normalni-plet',
'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek': 'zakladni-sada-pro-normalni-plet',
'Citliv√°': 'sada-pro-citlivou-plet',
'Citliv√° + Sem tam pup√≠nek': 'sada-pro-citlivou-plet',
'Kuper√≥za': 'pece-o-plet-s-kuperozou',
'Dermatitida': 'dermatitida',
'Probl√©m: AKN√â': 'sada-pro-problematickou-plet'
};

// Konstanty pro typy pleti
export const SKIN_TYPE_URLS = {
  'Mastn√°': 'mastnaplet',
  'Sm√≠≈°en√°': 'smisenaplet',
  'Such√°': 'suchaplet',
  'Norm√°ln√≠': 'normalniplet',
  'Citliv√°': 'citlivost'
};

// Sady podle typu pleti s prioritami
export const SADY_DLE_TYPU: Record<SkinType, ProductSet[]> = {
  'Such√°': [
    'Such√° a norm√°ln√≠ Anti-age',
    'Such√° komplet',
    'Such√° z√°klad + Sem tam pup√≠nek',
    'Such√° z√°klad'
  ],
  'Sm√≠≈°en√°': [
    'M+SM komplet + Sem tam pup√≠nek',
    'Probl√©m: AKN√â',
    'M+SM Anti-age',
    'M+SM komplet',
    'M+SM z√°klad'
  ],
  'Mastn√°': [
    'M+SM komplet + Sem tam pup√≠nek',
    'Probl√©m: AKN√â',
    'M+SM Anti-age',
    'M+SM komplet',
    'M+SM z√°klad'
  ],
  'Norm√°ln√≠': [
    'Such√° a norm√°ln√≠ Anti-age',
    'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek',
    'Norm√°ln√≠ komplet',
    'Norm√°ln√≠ z√°klad'
  ],
  'Citliv√°': [
    'Citliv√° + Sem tam pup√≠nek',
    'Citliv√°'
  ]
};

// Cenov√© limity pro sady
export const PRICE_LIMITS: Record<ProductSet, number | null> = {
  'Such√° z√°klad': 1500,
  'M+SM z√°klad': 1500,
  'Norm√°ln√≠ z√°klad': 1500,
  'Dermatitida': 1500,
  'Such√° komplet': 2500,
  'M+SM komplet': 2500,
  'Norm√°ln√≠ komplet': 2500,
  'Citliv√°': 2500,
  'Kuper√≥za': 2500,
  'Probl√©m: AKN√â': 2500,
  'Such√° a norm√°ln√≠ Anti-age': null,
  'M+SM Anti-age': null,
  'Such√° z√°klad + Sem tam pup√≠nek': null,
  'M+SM komplet + Sem tam pup√≠nek': null,
  'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek': null,
  'Citliv√° + Sem tam pup√≠nek': null
};
// Speci√°ln√≠ doporuƒçen√≠
export const SPECIAL_RECOMMENDATIONS = {
  PIGMENTATION: {
    text: '>S pigmentov√Ωmi skvrnami je to trochu slo≈æitƒõj≈°√≠. Kosmetika si s nimi m≈Ø≈æe ƒç√°steƒçnƒõ poradit, ale nej√∫ƒçinnƒõj≈°√≠ mo≈ænost√≠, jak se jich doopravdy zbavit, nebo je alespo≈à viditelnƒõ zm√≠rnit, je chemick√Ω peeling. V√≠ce o nƒõm p√≠≈°u na webu, kde m√°te tak√© rovnou i mo≈ænost objedn√°n√≠.',
    url: 'www.kailu.cz'
  },
  UNDEREYE_CIRCLES: {
    getText: (isAntiAge: boolean) => isAntiAge 
      ? 'Kr√©m na kruhy pod oƒçima je ji≈æ souƒç√°st√≠ va≈°√≠ anti-age sady.'
      : 'Pro zm√≠rnƒõn√≠ kruh≈Ø pod oƒçima v√°m doporuƒçuji p≈ôihodit do ko≈°√≠ku skvƒõl√Ω oƒçn√≠ kr√©m od korejsk√© znaƒçky Skin1004.'
  }
};

// V√Ωsledn√© texty pro jednotliv√© sady
export const RESULT_TEXTS: Record<ProductSet, string | ((answers: QuizAnswers) => string)> = {
  'Such√° z√°klad': 'Va≈°e such√° ple≈• vol√° po pravideln√© hydrataci a v√Ω≈æivƒõ. P≈ôipravila jsem pro v√°s z√°kladn√≠ sadu 4 produkt≈Ø, kter√° je perfektn√≠, pokud hled√°te ƒçasovƒõ √∫spornou a cenovƒõ dostupnƒõj≈°√≠ variantu. Ple≈• bude hydratovan√°, vy≈æiven√° a p≈ô√≠jemn√° na dotek.',
  
  'Such√° komplet': 'P≈ôipravila jsem pro v√°s sadu 5 produkt≈Ø, kter√© jsou silnƒõ hydrataƒçn√≠ a vy≈æivuj√≠c√≠. Va≈°e ple≈• se d√≠ky nim bude m√≠t jako v bavlnce, zmiz√≠ p≈ô√≠znaky suchosti, podr√°≈ædƒõn√≠, nep≈ô√≠jemn√© pnut√≠ i nadmƒõrn√° tvorba vr√°sek.',
  
  'Such√° a norm√°ln√≠ Anti-age': 'Va≈°e ple≈• p≈ôirozenƒõ st√°rne o nƒõco rychleji ne≈æ mastn√° ƒçi sm√≠≈°en√° ple≈•, a proto si zaslou≈æ√≠ tuto p√©ƒçi! P≈ôipravila jsem pro v√°s produkty, kter√© kombinuj√≠ intenzivn√≠ hydrataci s √∫ƒçinn√Ωmi anti-age slo≈ækami. Va≈°e ple≈• bude jen z√°≈ôit.‚ú®',
  
  'Such√° z√°klad + Sem tam pup√≠nek': 'Vypad√° to, ≈æe va≈°e such√° ple≈• pot≈ôebuje p≈ôedev≈°√≠m hydrataci, ale obƒças se na n√≠ vyklube i nƒõjak√Ω ten pup√≠nek. üòØ Pro ≈ôe≈°en√≠ obou probl√©m≈Ø v√°m doporuƒçuji po≈ô√≠dit si sadu, kter√° ple≈• hydratuje a z√°rove≈à nezat√≠≈æ√≠, a v p≈ô√≠padƒõ pot≈ôeby m√≠t po ruce tak√© mini sadu "Sem tam pup√≠nek". S touto kombinac√≠ bude va≈°e ple≈• spokojen√° za v≈°ech okolnost√≠!',
  
  'M+SM z√°klad': 'Va≈°e ple≈• si zaslou≈æ√≠ profesion√°ln√≠ p√©ƒçi, kter√° ji udr≈æ√≠ v rovnov√°ze. Pokud s p√©ƒç√≠ o ple≈• teprve zaƒç√≠n√°te nebo hled√°te cenovƒõ dostupnƒõj≈°√≠ variantu, bude pro v√°s tato sada perfektn√≠ volbou. Produkty jsou lehk√©, nezatƒõ≈æuj√≠ ple≈•, reguluj√≠ maz, ale nevysu≈°uj√≠. Dop≈ôejte sv√© pleti pravidelnou p√©ƒçi, kter√° zabere jen p√°r minut dennƒõ!',
  
  'M+SM komplet': 'Va≈°e ple≈• pot≈ôebuje chytrou p√©ƒçi, kter√° zkrot√≠ nadmƒõrnou tvorbu mazu, zabr√°n√≠ vzniku pup√≠nk≈Ø a p≈ôitom ji nevysu≈°√≠. üôè Proto jsem pro v√°s vybrala tuto sadu ‚Äì vƒçetnƒõ na≈°eho bestselleru, enzymatick√©ho peelingu, kter√Ω si hravƒõ porad√≠ s ƒçern√Ωmi teƒçkami. S t√≠mto arzen√°lem bude va≈°e ple≈• ƒçist√°, vyv√°≈æen√° a svƒõ≈æ√≠ ka≈æd√Ω den!',
  
  'M+SM komplet + Sem tam pup√≠nek': 'Aby va≈°e n√°ladov√° ple≈• z≈Østala v rovnov√°ze a z√°rove≈à efektivnƒõ reagovala na obƒçasn√© pup√≠nky, doporuƒçuji v√°m kombinaci dvou sad. Hlavn√≠ sada va≈°i ple≈• d≈Økladnƒõ vyƒçist√≠, reguluje tvorbu mazu bez vysu≈°en√≠ a pom≈Ø≈æe p≈ôedch√°zet nedokonalostem. Mini sada ‚ÄûSem tam pup√≠nek" pak okam≈æitƒõ zas√°hne v p≈ô√≠padƒõ, ≈æe se nƒõjak√Ω ten pup√≠nek p≈ôece jen objev√≠. Spoleƒçnƒõ tvo≈ô√≠ perfektn√≠ duo ‚Äì √∫ƒçinn√©, ale z√°rove≈à ≈°etrn√© k va≈°√≠ pleti.',
  
  'M+SM Anti-age': 'Va≈°e ple≈• pot≈ôebuje p√©ƒçi, kter√° mysl√≠ na ka≈æd√Ω detail! üí™ Tuto sadu sama pou≈æ√≠v√°m a je to moje srdcovka ‚Äì zpev≈àuje ple≈•, hydratuje bez ucp√°n√≠ p√≥r≈Ø, projas≈àuje, nevysu≈°uje a pom≈Ø≈æe redukovat vr√°sky. Perfektn√≠ kombinace vyladƒõn√° do posledn√≠ho detailu, kterou vƒõ≈ô√≠m, ≈æe si tak√© zamilujete! ',
  
  'Norm√°ln√≠ komplet': ' Va≈°e ple≈• je ve skvƒõl√© kondici! P≈ôesto≈æe se ≈ôad√≠ mezi "norm√°ln√≠" typ pleti, o kter√©m vƒõt≈°ina lid√≠ jen sn√≠, je d≈Øle≈æit√© neusnout na vav≈ô√≠nech. I va≈°e ple≈• se s p≈ôib√Ωvaj√≠c√≠m vƒõkem mƒõn√≠ a i kdy≈æ ji netr√°p√≠ probl√©my jako suchost, nebo nadmƒõrn√Ω maz, procesy spojen√© s p≈ôirozen√Ωm st√°rnut√≠m se j√≠ nevyhnou. P≈ôipravila jsem pro v√°s kompletn√≠ sadu 6 produkt≈Ø, kter√° kromƒõ ka≈ædodenn√≠ p√©ƒçe obsahuje i produkty pro intenzivnƒõj≈°√≠ o≈°et≈ôen√≠. Va≈°e ple≈• bude dokonale vy≈æiven√°, svƒõ≈æ√≠ a rozz√°≈ôen√°.',
  
  'Norm√°ln√≠ z√°klad': (answers) => {
    if (answers['wish-fish']?.includes('Zrovna jsem tƒõhotn√°')) {
      return 'Tato sada je ≈°etrn√°, √∫ƒçinn√°, cenovƒõ dostupn√° a tak√© ƒçasovƒõ nen√°roƒçn√°. üòá Perfektn√≠ pro v√°s, v dobƒõ tƒõhotenstv√≠ i kojen√≠. ‚ú®';
    }
    return 'Vypad√° to, ≈æe je va≈°e ple≈• (naprosto) norm√°ln√≠! üòØ Gratuluji - a ti≈°e v√°m z√°vid√≠m. üòä M√°te pomƒõrnƒõ vz√°cn√Ω typ pleti, o kter√©m vƒõt≈°ina z n√°s m≈Ø≈æe jen sn√≠t. S pravideln√Ωm pou≈æ√≠v√°n√≠m t√©to sady bude va≈°e ple≈• svƒõ≈æ√≠, zdrav√° a p≈ôirozenƒõ z√°≈ôiv√°.';
  },
  
  'Norm√°ln√≠ z√°klad + Sem tam pup√≠nek': 'M√°te vz√°cn√Ω typ pleti, o kter√©m mnoz√≠ mohou jen sn√≠t ‚Äì va≈°i ple≈• oznaƒçujeme jako ‚Äûnorm√°ln√≠." Z va≈°ich odpovƒõd√≠ v≈°ak vypl√Ωv√°, ≈æe se obƒças objev√≠ nƒõjak√Ω ten pup√≠nek. Proto bych v√°m doporuƒçila kombinaci dvou sad. Kompletn√≠ sada udr≈æ√≠ va≈°i ple≈• v rovnov√°ze, dod√° j√≠ p≈ôirozen√Ω jas a svƒõ≈æest. A pokud se nƒõkdy objev√≠ neƒçekan√© nedokonalosti, snadno si s nimi porad√≠ na≈°e mini sada ‚ÄûSem tam pup√≠nek." Dop≈ôejte sv√© pleti komplexn√≠ p√©ƒçi a objednejte si obƒõ sady ‚Äì pro kr√°su ve v≈°ech situac√≠ch!',
  
  'Citliv√°': (answers) => {
    if (answers['wish-fish']?.includes('A≈• u≈æ nen√≠ moje ple≈• tak vysu≈°en√°')) {
      return 'P≈ôipravila jsem pro v√°s sadu, kter√° ≈ôe≈°√≠ obƒõ va≈°e pot≈ôeby - zklidnƒõn√≠ i hydrataci. A jako bonus pos√≠l√≠te ochranou bari√©ru a ko≈æn√≠ mikrobiom va≈°√≠ pleti.‚ú®';
    }
    return 'P≈ôesto≈æe jsou produkty v t√©to sadƒõ velmi ≈°etrn√©, jejich √∫ƒçinnost je neskuteƒçn√°! Zklidn√≠ podr√°≈ædƒõnou ple≈•, pos√≠l√≠ jej√≠ p≈ôirozenou ochrannou bari√©ru, hydratuj√≠ a vy≈æivuj√≠.';
  },
  
  'Citliv√° + Sem tam pup√≠nek': 'Pot≈ôebujete p√©ƒçi, kter√° si porad√≠ s citlivost√≠ i obƒçasn√Ωmi pup√≠nky. Hlavn√≠ sada pro ka≈ædodenn√≠ p√©ƒçi zklidn√≠, hydratuje, vy≈æiv√≠ va≈°i ple≈• a pos√≠l√≠ jej√≠ p≈ôirozenou ochrannou bari√©ru. Dopl≈àkov√° sada Sem tam pup√≠nek v p≈ô√≠padƒõ pot≈ôeby v√Ωraznƒõ urychl√≠ hojen√≠ pup√≠nk≈Ø a zamez√≠ v√Ωskytu dal≈°√≠ch nedokonalost√≠.',
  
  'Kuper√≥za': 'Nejlep≈°√≠ variantou pro v√°s bude zklid≈àuj√≠c√≠ sada zamƒõ≈ôuj√≠c√≠ se na kuper√≥zu (popraskan√© ≈æilky a zaƒçerven√°n√≠ v obliƒçeji). Souƒç√°st√≠ bal√≠ƒçku je nav√≠c manu√°l, ve kter√©m se dozv√≠te nƒõkolik u≈æiteƒçn√Ωch rad a tip≈Ø, kter√© va≈°√≠ pleti prospƒõj√≠.',
  
  'Dermatitida': 'Vybral/a jste mo≈ænost, ≈æe m√°te dermatitidu. Nen√≠ to s n√≠ √∫plnƒõ jednoduch√©, m≈Ø≈æe b√Ωt perior√°ln√≠ nebo seboroick√°. Nejlep≈°√≠ bude, kdy≈æ se objedn√°te na o≈°et≈ôen√≠ a probereme to na≈æivo u n√°s v salonu. Pokud by to nebylo mo≈æn√©, napi≈°te mi email na info@kailu.cz, po≈°lete fotku a do≈ôe≈°√≠me to na d√°lku. Bude to v√Ωzva, ale se spr√°vnou p√©ƒç√≠ dermatitidu zvl√°dneme porazit! Pro oba dva typy m√°m p≈ôipraven√© sady se skvƒõl√Ωmi, osvƒõdƒçen√Ωmi produkty.ü§©',
  
  'Probl√©m: AKN√â': 'Tato sada va≈°√≠ pleti pom≈Ø≈æe postupnƒõ se zklidnit, projasnit a v√Ωraznƒõ sn√≠≈æit v√Ωskyt pup√≠nk≈Ø. V√Ωsledky se nedostav√≠ p≈ôes noc, ale s trpƒõlivost√≠ a spr√°vnou p√©ƒç√≠ uvid√≠te, jak se v√°m va≈°e ple≈• postupnƒõ mƒõn√≠. üíñ Souƒç√°st√≠ va≈°√≠ nov√© p√©ƒçe bude nav√≠c i podrobn√Ω manu√°l, kter√Ω v√°s krok za krokem provede cel√Ωm procesem a pom≈Ø≈æe v√°m se v≈°√≠m, co by va≈°i ple≈• mohlo ovlivnit. U≈æ teƒè se tƒõ≈°√≠m na va≈°e v√Ωsledky! üôå'
};

// Promƒõnn√° pro body typ≈Ø pleti
const points = {
  'Such√°': 0,
  'Sm√≠≈°en√°': 0,
  'Mastn√°': 0,
  'Citliv√°': 0,
  'Norm√°ln√≠': 0
};

// Funkce pro vyhodnocen√≠ typu pleti
export function evaluateSkinType(answers: QuizAnswers): SkinType {
  // Reset bod≈Ø pro nov√© vyhodnocen√≠
  points['Such√°'] = 0;
  points['Sm√≠≈°en√°'] = 0;
  points['Mastn√°'] = 0;
  points['Citliv√°'] = 0;
  points['Norm√°ln√≠'] = 0;

  console.log('=== VYHODNOCEN√ç TYPU PLETI ===');
  console.log('Poƒç√°teƒçn√≠ stav bod≈Ø:', {
    Such√°: points['Such√°'],
    Sm√≠≈°en√°: points['Sm√≠≈°en√°'],
    Mastn√°: points['Mastn√°'],
    Citliv√°: points['Citliv√°'],
    Norm√°ln√≠: points['Norm√°ln√≠']
  });

  // Vyhodnocen√≠ prvn√≠ ot√°zky
  const skinDescription = answers['skin-description'];
  if (skinDescription) {
    console.log('\nVyhodnocuji ot√°zku o typu pleti:', skinDescription);
    if (skinDescription.includes('Je v pohodƒõ')) {
      points['Norm√°ln√≠']++;
      points['Sm√≠≈°en√°']++;
      console.log('P≈ôid√°n 1 bod pro Norm√°ln√≠ a 1 bod pro Sm√≠≈°enou');
    } else if (skinDescription.includes('Je such√°')) {
      points['Such√°']++;
      console.log('P≈ôid√°n 1 bod pro Suchou');
    } else if (skinDescription.includes('Dost se mast√≠')) {
      points['Sm√≠≈°en√°']++;
      console.log('P≈ôid√°n 1 bod pro Sm√≠≈°enou');
    } else if (skinDescription.includes('Mast√≠ se hodnƒõ')) {
      points['Mastn√°']++;
      console.log('P≈ôid√°n 1 bod pro Mastnou');
    } else if (skinDescription.includes('Je citliv√°')) {
      points['Citliv√°']++;
      console.log('P≈ôid√°n 1 bod pro Citlivou');
    }
    console.log('Body po prvn√≠ ot√°zce:', {
      Such√°: points['Such√°'],
      Sm√≠≈°en√°: points['Sm√≠≈°en√°'],
      Mastn√°: points['Mastn√°'],
      Citliv√°: points['Citliv√°'],
      Norm√°ln√≠: points['Norm√°ln√≠']
    });
  }

  // Ot√°zka o nose
  const noseAnswer = answers['skin-nose'];
  if (noseAnswer) {
    console.log('\nVyhodnocuji ot√°zku o nose:', noseAnswer);
    if (noseAnswer.includes('Va≈°e p√≥ry si na schov√°vanou nehraj√≠')) {
      points['Mastn√°']++;
      points['Sm√≠≈°en√°']++;
      console.log('P≈ôid√°n 1 bod pro Mastnou a 1 bod pro Sm√≠≈°enou');
    } else if (noseAnswer.includes('P√≥ry jsou viditeln√© jen p≈ôi bli≈æ≈°√≠m pohledu')) {
      points['Norm√°ln√≠']++;
      points['Such√°']++;
      console.log('P≈ôid√°n 1 bod pro Norm√°ln√≠ a 1 bod pro Suchou');
    } else if (noseAnswer.includes('Jak√© p√≥ry')) {
      points['Such√°']++;
      console.log('P≈ôid√°n 1 bod pro Suchou');
    }
    console.log('Body po ot√°zce o nose:', {
      Such√°: points['Such√°'],
      Sm√≠≈°en√°: points['Sm√≠≈°en√°'],
      Mastn√°: points['Mastn√°'],
      Citliv√°: points['Citliv√°'],
      Norm√°ln√≠: points['Norm√°ln√≠']
    });
  }

  // Ot√°zka o tv√°≈ô√≠ch
  const cheeksAnswer = answers['skin-cheeks'];
  if (cheeksAnswer) {
    console.log('\nVyhodnocuji ot√°zku o tv√°≈ô√≠ch:', cheeksAnswer);
    if (cheeksAnswer.includes('Ano, jsou v≈°ude')) {
      points['Mastn√°']++;
      console.log('P≈ôid√°n bod pro Mastnou');
    } else if (cheeksAnswer.includes('Vid√≠m je hlavnƒõ v oblasti vedle nosu')) {
      points['Sm√≠≈°en√°']++;
      console.log('P≈ôid√°n bod pro Sm√≠≈°enou');
    } else if (cheeksAnswer.includes('Sem tam mo≈æn√° nƒõjak√Ω je')) {
      points['Norm√°ln√≠']++;
      points['Such√°']++;
      console.log('P≈ôid√°n bod pro Norm√°ln√≠ a Suchou');
    }
    console.log('Body po ot√°zce o tv√°≈ô√≠ch:', {
      Such√°: points['Such√°'],
      Sm√≠≈°en√°: points['Sm√≠≈°en√°'],
      Mastn√°: points['Mastn√°'],
      Citliv√°: points['Citliv√°'],
      Norm√°ln√≠: points['Norm√°ln√≠']
    });
  }

  // Ot√°zka o kosmetice
  const cosmeticAnswers = answers['cosmetic-compatibility'] || [];
  if (cosmeticAnswers.length > 0) {
    console.log('\nVyhodnocuji ot√°zky o kosmetice:', cosmeticAnswers);
    cosmeticAnswers.forEach(answer => {
      if (answer.includes('Obƒças m√°m pocit, ≈æe mi ple≈• sp√≠≈°e vysu≈°√≠')) {
        points['Such√°']++;
        points['Citliv√°']++;
        console.log('P≈ôid√°n bod pro Suchou a Citlivou (vysu≈°en√≠)');
      }
      if (answer.includes('S kosmetikou mus√≠m opatrnƒõ')) {
        points['Citliv√°']++;
        console.log('P≈ôid√°n bod pro Citlivou (opatrnost)');
      }
      if (answer.includes('Vƒõt≈°ina kosmetick√Ωch p≈ô√≠pravk≈Ø mi sedne')) {
        points['Norm√°ln√≠']++;
        console.log('P≈ôid√°n bod pro Norm√°ln√≠');
      }
      if (answer.includes('Nƒõkter√© produkty mi √∫plnƒõ ucpou ple≈•')) {
        points['Mastn√°']++;
        points['Sm√≠≈°en√°']++;
        console.log('P≈ôid√°n bod pro Mastnou a Sm√≠≈°enou');
      }
      if (answer.includes('Moje ple≈• miluje po≈ô√°dnƒõ hutn√© kr√©my')) {
        points['Such√°']++;
        console.log('P≈ôid√°n bod pro Suchou');
      }
    });
    console.log('Body po ot√°zce o kosmetice:', {
      Such√°: points['Such√°'],
      Sm√≠≈°en√°: points['Sm√≠≈°en√°'],
      Mastn√°: points['Mastn√°'],
      Citliv√°: points['Citliv√°'],
      Norm√°ln√≠: points['Norm√°ln√≠']
    });
  }

  // Urƒçen√≠ v√Ωsledn√©ho typu
  const sortedTypes = Object.entries(points)
    .sort(([,a], [,b]) => b - a) as [SkinType, number][];
  
  console.log('\n=== V√ùSLEDEK ===');
  console.log('Se≈ôazen√© typy podle bod≈Ø:', 
    sortedTypes.map(([type, score]) => `${type}: ${score}`).join(', ')
  );
  console.log('Vybran√Ω typ pleti:', sortedTypes[0][0]);

  return sortedTypes[0][0];
}

function countSensitivityPoints(answers: QuizAnswers): number {
  let sensitivityPoints = 0;
  console.log('=== POƒå√çT√ÅN√ç BOD≈Æ CITLIVOSTI ===');
  
  // Prvn√≠ ot√°zka - popis pleti
  if (answers['skin-description']?.includes('Je citliv√°')) {
    sensitivityPoints++;
    console.log('+ 1 bod za citliv√Ω popis pleti');
  }

  // P≈ô√°n√≠ nem√≠t citlivou ple≈•
  if (answers['wish-fish']?.includes('U≈æ nechci m√≠t citlivou')) {
    sensitivityPoints++;
    console.log('+ 1 bod za p≈ô√°n√≠ nem√≠t citlivou ple≈•');
  }
  
  // Kosmetick√° kompatibilita
  const cosmeticAnswers = answers['cosmetic-compatibility'] || [];

  if (cosmeticAnswers.some(answer => answer.includes('S kosmetikou mus√≠m opatrnƒõ'))) {
    sensitivityPoints++;
    console.log('+ 1 bod za opatrnost s kosmetikou');
  }
  
  if (cosmeticAnswers.some(answer => answer.includes('Obƒças m√°m pocit, ≈æe mi ple≈• sp√≠≈°e vysu≈°√≠'))) {
    sensitivityPoints++;
    console.log('+ 1 bod za vysu≈°ov√°n√≠ pleti');
  }
  
  console.log('Celkov√Ω poƒçet bod≈Ø citlivosti:', sensitivityPoints);
  return sensitivityPoints;
}

// Hlavn√≠ vyhodnocovac√≠ funkce
export function evaluateQuiz(answers: QuizAnswers): QuizResult {
  // Z√°kladn√≠ typ pleti
  const basicSkinType = evaluateSkinType(answers);
  
  // Body citlivosti
  const sensitivityPoints = countSensitivityPoints(answers);
  console.log('Body citlivosti:', sensitivityPoints);
  
  // Kontrola tƒõhotenstv√≠
  const isPregnant = answers['wish-fish']?.includes('Zrovna jsem tƒõhotn√°');
  console.log('Je tƒõhotn√°:', isPregnant);
  
  // Z√≠sk√°n√≠ rozpoƒçtu
  const budgetAnswer = answers['budget-limit'] || '';
  const budget = budgetAnswer.includes('1500') ? 1500 :
                budgetAnswer.includes('2500') ? 2500 : null;
  console.log('Rozpoƒçet:', budget);
  
  // Filtrujeme probl√©my
  let problems = answers['skin']?.filter(problem =>
    problem !== 'Nen√≠, jsem spokojen√° / Nic z v√Ω≈°e uveden√©ho'
  ) || [];
  
  console.log('Filtrovan√© probl√©my:', problems);
  
  // KL√çƒåOV√Å ZMƒöNA: Priorita pro dermatitidu a kuperozu
  if (problems.includes('Zarudl√© skvrny, ≈°upinky nebo mal√© pup√≠nky v okol√≠ √∫st nebo na ƒçele, nose a oboƒç√≠ (Dermatitida)')) {
    console.log('Nalezena dermatitida - nastavuji speci√°ln√≠ sadu');
    
    // Urƒçen√≠ zobrazovan√©ho typu pleti
    const isSensitive = sensitivityPoints >= 2 || (isPregnant && budget > 1500);
    let displaySkinType = isSensitive 
      ? `${basicSkinType} a tak√© citliv√°.` 
      : basicSkinType;
    
    return {
      skinType: displaySkinType,
      recommendedSet: 'Dermatitida',
      problems,
      specialRecommendations: {
        hasPigmentation: problems.includes('Pigmentov√© skvrny nebo jizvy po akn√©'),
        hasUndereyeCircles: problems.includes('Kruhy pod oƒçima'),
        antiAgeSuggested: false,
        hasBlackheads: problems.includes('Roz≈°√≠≈ôen√© p√≥ry / ƒçern√© teƒçky') && 
          !['Mastn√°', 'Sm√≠≈°en√°'].includes(basicSkinType),
        isPregnant
      }
    };
  }
  
  if (problems.includes('Trvale zaƒçervenal√° ple≈• / popraskan√© ≈æilky')) {
    console.log('Nalezena kuper√≥za - nastavuji speci√°ln√≠ sadu');
    
    // Urƒçen√≠ zobrazovan√©ho typu pleti
    const isSensitive = sensitivityPoints >= 2 || (isPregnant && budget > 1500);
    let displaySkinType = isSensitive 
      ? `${basicSkinType} a tak√© citliv√°.` 
      : basicSkinType;
    
    return {
      skinType: displaySkinType,
      recommendedSet: 'Kuper√≥za',
      problems,
      specialRecommendations: {
        hasPigmentation: problems.includes('Pigmentov√© skvrny nebo jizvy po akn√©'),
        hasUndereyeCircles: problems.includes('Kruhy pod oƒçima'),
        antiAgeSuggested: false,
        hasBlackheads: problems.includes('Roz≈°√≠≈ôen√© p√≥ry / ƒçern√© teƒçky') && 
          !['Mastn√°', 'Sm√≠≈°en√°'].includes(basicSkinType),
        isPregnant
      }
    };
  }
  
  // Pokud je tƒõhotn√°, odstran√≠me pup√≠nky z probl√©m≈Ø
  if (isPregnant) {
    problems = problems.filter(problem => !problem.includes('pup√≠nek'));
    console.log('Probl√©my po odstranƒõn√≠ pup√≠nk≈Ø (tƒõhotenstv√≠):', problems);
  }
  
  // Urƒçen√≠ doporuƒçen√© sady
  let recommendedSet: ProductSet;
  if (isPregnant) {
    // Logika pro tƒõhotn√©
    if (budget === 1500) {
      recommendedSet = 'Norm√°ln√≠ z√°klad';
      console.log('Tƒõhotenstv√≠ s limitem 1500 - vyb√≠r√°m Norm√°ln√≠ z√°klad');
    } else {
      recommendedSet = 'Citliv√°';
      console.log('Tƒõhotenstv√≠ s vy≈°≈°√≠m limitem - vyb√≠r√°m Citlivou sadu');
    }
  } else if (sensitivityPoints >= 2) {
    // Logika pro citlivou ple≈• (kdy≈æ nen√≠ tƒõhotn√°)
    recommendedSet = problems.includes('Sem tam pup√≠nek') 
      ? 'Citliv√° + Sem tam pup√≠nek'
      : 'Citliv√°';
    console.log('Citliv√° ple≈• - vyb√≠r√°m:', recommendedSet);
  } else {
    // Standardn√≠ logika pro ostatn√≠ p≈ô√≠pady
    recommendedSet = selectProductSet(basicSkinType, problems, budget, answers);
    console.log('Standardn√≠ v√Ωbƒõr sady:', recommendedSet);
  }
  
  // Urƒçen√≠ zobrazovan√©ho typu pleti
  const isSensitive = sensitivityPoints >= 2 || (isPregnant && budget > 1500);
  let displaySkinType;
  
  if (basicSkinType === 'Citliv√°') {
    // Najdeme druh√Ω nejƒçastƒõj≈°√≠ typ pleti
    const sortedSkinTypes = Object.entries(points)
      .filter(([type]) => type !== 'Citliv√°') // Vy≈ôad√≠me "Citliv√°"
      .sort((a, b) => b[1] - a[1]); // Se≈ôad√≠me podle bod≈Ø
  
    const secondMostCommonType = sortedSkinTypes.length > 0 ? sortedSkinTypes[0][0] : 'Neurƒçeno';
  
    displaySkinType = secondMostCommonType 
      ? `${secondMostCommonType}, ale nyn√≠ mus√≠me ≈ôe≈°it p≈ôedev≈°√≠m jej√≠ citlivost` 
      : `Va≈°e ple≈• vykazuje zn√°mky citlivosti, co≈æ je nyn√≠ hlavn√≠ priorita.`;
  } else {
    displaySkinType = isSensitive 
      ? `${basicSkinType} a tak√© citliv√°.` 
      : basicSkinType;
  }

  console.log('Z√°kladn√≠ typ pleti:', basicSkinType);
  console.log('Je citliv√°:', isSensitive);
  console.log('V√Ωsledn√Ω zobrazen√Ω typ:', displaySkinType);
  
  return {
    skinType: displaySkinType,
    recommendedSet,
    problems,
    specialRecommendations: {
      hasPigmentation: problems.includes('Pigmentov√© skvrny nebo jizvy po akn√©'),
      hasUndereyeCircles: problems.includes('Kruhy pod oƒçima'),
      antiAgeSuggested: recommendedSet.includes('Anti-age'),
      hasBlackheads: problems.includes('Roz≈°√≠≈ôen√© p√≥ry / ƒçern√© teƒçky') && 
        !['Mastn√°', 'Sm√≠≈°en√°'].includes(basicSkinType) && 
        !recommendedSet.includes('M+SM komplet') && 
        !recommendedSet.includes('M+SM Anti-age'),
      isPregnant
    }
  };
};

// Funkce pro v√Ωbƒõr produktov√© sady
export function selectProductSet(
  skinType: SkinType, 
  problems: string[], 
  budget: number | null,
  answers: QuizAnswers
): ProductSet {
  console.log('\n=== V√ùBƒöR PRODUKTOV√â SADY ===');
  console.log('Vstupn√≠ parametry:');
  console.log('- Typ pleti:', skinType);
  console.log('- Probl√©my:', problems);
  console.log('- Rozpoƒçet:', budget);
  console.log('- P≈ô√°n√≠:', answers['wish-fish'] || '≈æ√°dn√©');

  // Kontrola speci√°ln√≠ch p≈ô√≠pad≈Ø
  if (problems.includes('Zarudl√© skvrny, ≈°upinky nebo mal√© pup√≠nky v okol√≠ √∫st nebo na ƒçele, nose a oboƒç√≠ (Dermatitida)')) {
    console.log('Nalezena dermatitida - vrac√≠m speci√°ln√≠ sadu');
    return PRODUCT_SETS.DERMATITIDA;
  }
  
  if (problems.includes('Trvale zaƒçervenal√° ple≈• / popraskan√© ≈æilky')) {
    console.log('Nalezena kuper√≥za - vrac√≠m speci√°ln√≠ sadu');
    return PRODUCT_SETS.KUPEROZA;
  }

  // Z√≠sk√°n√≠ dostupn√Ωch sad pro typ pleti
  const availableSets = SADY_DLE_TYPU[skinType];
  console.log('\nDostupn√© sady pro typ pleti:', availableSets);

  // Filtrov√°n√≠ podle cenov√©ho limitu
  let affordableSets = availableSets.filter(set => {
    const setPrice = PRICE_LIMITS[set];
    if (setPrice === null) {
      return budget === null;
    }
    return budget === null || setPrice <= budget;
  });
  console.log('Sady v cenov√©m limitu:', affordableSets);

  // V√Ωbƒõr sady podle probl√©m≈Ø
  const hasAcne = problems.includes('Akn√© (v√≠ce ne≈æ 5 pup√≠nk≈Ø)');
  const wantsToRemoveAcne = answers['wish-fish']?.includes('A≈• mi zmiz√≠ pup√≠nky');
  
  // Doporuƒçit sadu na akn√© pouze pokud explicitnƒõ vybral akn√© nebo si p≈ôeje zbavit se pup√≠nk≈Ø
  if (hasAcne || wantsToRemoveAcne) {
    console.log('Nalezeno akn√© nebo p≈ô√°n√≠ zbavit se pup√≠nk≈Ø - vrac√≠m speci√°ln√≠ sadu pro akn√©');
    return PRODUCT_SETS.PROBLEM_AKNE;
  }
  
  // Odstra≈àte sadu pro akn√© z dostupn√Ωch sad, pokud u≈æivatel nem√° akn√©
  if (affordableSets.includes(PRODUCT_SETS.PROBLEM_AKNE) && !hasAcne && !wantsToRemoveAcne) {
    affordableSets = affordableSets.filter(set => set !== PRODUCT_SETS.PROBLEM_AKNE);
    console.log('Sada pro akn√© odstranƒõna z dostupn√Ωch sad, proto≈æe u≈æivatel nem√° akn√©:', affordableSets);
  }

  if (problems.includes('Sem tam pup√≠nek')) {
    // Pro mastnou/sm√≠≈°enou ple≈•
    if (['Sm√≠≈°en√°', 'Mastn√°'].includes(skinType)) {
      const pupinekSet = PRODUCT_SETS.MSM_KOMPLET_PUPINEK;
      if (affordableSets.includes(pupinekSet)) {
        console.log('Nalezen obƒçasn√Ω pup√≠nek pro mastnou/sm√≠≈°enou ple≈• - vyb√≠r√°m:', pupinekSet);
        return pupinekSet;
      }
    } else {
      // Pro ostatn√≠ typy pleti
      const pupinekSet = `${skinType} z√°klad + Sem tam pup√≠nek` as ProductSet;
      if (affordableSets.includes(pupinekSet)) {
        console.log('Nalezen obƒçasn√Ω pup√≠nek - vyb√≠r√°m:', pupinekSet);
        return pupinekSet;
      }
    }
    console.log('Pup√≠nkov√° sada nen√≠ v dostupn√Ωch sad√°ch, pokraƒçuji dal≈°√≠m v√Ωbƒõrem');
  }

  const wishAnswer = answers['wish-fish'];
  if (wishAnswer) {
    console.log('\nVyhodnocuji p≈ô√°n√≠:', wishAnswer);

    // Pokud m√° b√Ωt anti-age, vybereme anti-age sadu
    if (problems.includes('Vr√°sky') || wishAnswer?.includes('Chci zpomalit st√°rnut√≠')) {
      const antiAgeSet = affordableSets.find(set => set.includes('Anti-age'));
      if (antiAgeSet) {
        console.log('Nalezeny vr√°sky nebo p≈ô√°n√≠ zpomalit st√°rnut√≠ - vyb√≠r√°m anti-age sadu:', antiAgeSet);
        return antiAgeSet;
      }
      console.log('Anti-age sada nen√≠ v dostupn√Ωch sad√°ch, pokraƒçuji dal≈°√≠m v√Ωbƒõrem');
    }
  
    // P≈ô√°n√≠ ohlednƒõ mastnoty a lesku
    if (wishAnswer.includes('p≈ôestane lesknout') || wishAnswer.includes('ƒçern√© teƒçky')) {
      if (['Sm√≠≈°en√°', 'Mastn√°'].includes(skinType)) {
        console.log('P≈ô√°n√≠ ohlednƒõ mastnoty/ƒçern√Ωch teƒçek - vyb√≠r√°m kompletn√≠ sadu pro mastnou/sm√≠≈°enou ple≈•');
        const kompletSada = affordableSets.find(set => set.includes('komplet'));
        if (kompletSada) return kompletSada;
      }
    }
  
    // P≈ô√°n√≠ ohlednƒõ citliv√© pleti
    if (wishAnswer.includes('nechci m√≠t citlivou ple≈•')) {
      console.log('P≈ô√°n√≠ ohlednƒõ citliv√© pleti - vyb√≠r√°m speci√°ln√≠ sadu pro citlivou ple≈•');
      const citlivaSada = affordableSets.find(set => set.includes('Citliv√°'));
      if (citlivaSada) return citlivaSada;
    }
  
    // P≈ô√°n√≠ ohlednƒõ pup√≠nk≈Ø
    if (wishAnswer.includes('zmiz√≠ pup√≠nky')) {
      console.log('P≈ô√°n√≠ ohlednƒõ pup√≠nk≈Ø - kontroluji dostupnost pup√≠nkov√© sady');
      const pupinekSet = `${skinType} z√°klad + Sem tam pup√≠nek` as ProductSet;
      if (affordableSets.includes(pupinekSet)) return pupinekSet;
    }
  }

  // Jinak vrac√≠me prvn√≠ dostupnou sadu podle priority
  if (affordableSets.length > 0) {
    console.log('≈Ω√°dn√© speci√°ln√≠ podm√≠nky, vrac√≠m prvn√≠ dostupnou sadu:', affordableSets[0]);
    return affordableSets[0];
  } else {
    console.log('Nenalezena ≈æ√°dn√° dostupn√° sada.');
    // Fallback pro p≈ô√≠pad, ≈æe by nebyly ≈æ√°dn√© dostupn√© sady
    return skinType === 'Such√°' ? PRODUCT_SETS.SUCHA_ZAKLAD :
           skinType === 'Mastn√°' || skinType === 'Sm√≠≈°en√°' ? PRODUCT_SETS.MSM_ZAKLAD :
           skinType === 'Norm√°ln√≠' ? PRODUCT_SETS.NORMALNI_ZAKLAD :
           PRODUCT_SETS.CITLIVA;
  }
}